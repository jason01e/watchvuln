name: Release WatchVuln

on:
  push:
    branches:
      - 'release/**'
      - 'main'
  release:
    types: [ published ]

permissions:
  contents: read

jobs:
  build-cli:
    name: Build cli
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: linux
            arch: arm
            output: watchvuln-linux-armv7
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      GOARM: 7
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.2
          cache: true
      - run: go build -trimpath -ldflags "-w -s -extldflags '-static'" -o target/${{ matrix.output }}
      - uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.arch }}
          path: target/*

  upload-release:
    name: Release
    needs: [ build-cli ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: target-*
          merge-multiple: true
          path: target
      - run: ls -al target && ls -R target/ && file target/
      # release assets
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/*
